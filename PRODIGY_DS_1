{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPcwXBV7SBDItbTn0LCdS84"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"ON26vRfsC856"},"outputs":[],"source":["import pandas as pd  # For handling datasets\n","import matplotlib.pyplot as plt  # For plotting charts\n","import seaborn as sns  # For better visualizations\n"]},{"cell_type":"code","source":["df = pd.read_csv('CensusData.csv')  # Replace with your actual file name\n","\n","# Display the first few rows\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":399},"id":"B1BPQ6vLDfWM","executionInfo":{"status":"ok","timestamp":1740720992806,"user_tz":-330,"elapsed":363,"user":{"displayName":"Sahithi Kattamuri","userId":"14146360266842818591"}},"outputId":"8abcec67-0aae-405c-a1db-79aa77383635"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Age          workclass  fnlwgt   education  education-num  \\\n","0   39          State-gov   77516   Bachelors             13   \n","1   50   Self-emp-not-inc   83311   Bachelors             13   \n","2   38            Private  215646     HS-grad              9   \n","3   53            Private  234721        11th              7   \n","4   28            Private  338409   Bachelors             13   \n","\n","        Marital-status          Occupation    Relationship    Race      Sex  \\\n","0        Never-married        Adm-clerical   Not-in-family   White     Male   \n","1   Married-civ-spouse     Exec-managerial         Husband   White     Male   \n","2             Divorced   Handlers-cleaners   Not-in-family   White     Male   \n","3   Married-civ-spouse   Handlers-cleaners         Husband   Black     Male   \n","4   Married-civ-spouse      Prof-specialty            Wife   Black   Female   \n","\n","   capital-gain  capital-loss  hours-per-week  native-country  Income  \n","0          2174             0              40   United-States   <=50K  \n","1             0             0              13   United-States   <=50K  \n","2             0             0              40   United-States   <=50K  \n","3             0             0              40   United-States   <=50K  \n","4             0             0              40            Cuba   <=50K  "],"text/html":["\n","  <div id=\"df-0fed7645-c147-4465-a7f7-f85c3a9b9aad\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>workclass</th>\n","      <th>fnlwgt</th>\n","      <th>education</th>\n","      <th>education-num</th>\n","      <th>Marital-status</th>\n","      <th>Occupation</th>\n","      <th>Relationship</th>\n","      <th>Race</th>\n","      <th>Sex</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","      <th>native-country</th>\n","      <th>Income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>State-gov</td>\n","      <td>77516</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Never-married</td>\n","      <td>Adm-clerical</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>2174</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>Self-emp-not-inc</td>\n","      <td>83311</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Exec-managerial</td>\n","      <td>Husband</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>Private</td>\n","      <td>215646</td>\n","      <td>HS-grad</td>\n","      <td>9</td>\n","      <td>Divorced</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Not-in-family</td>\n","      <td>White</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>Private</td>\n","      <td>234721</td>\n","      <td>11th</td>\n","      <td>7</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Handlers-cleaners</td>\n","      <td>Husband</td>\n","      <td>Black</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>United-States</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>Private</td>\n","      <td>338409</td>\n","      <td>Bachelors</td>\n","      <td>13</td>\n","      <td>Married-civ-spouse</td>\n","      <td>Prof-specialty</td>\n","      <td>Wife</td>\n","      <td>Black</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>Cuba</td>\n","      <td>&lt;=50K</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0fed7645-c147-4465-a7f7-f85c3a9b9aad')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0fed7645-c147-4465-a7f7-f85c3a9b9aad button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0fed7645-c147-4465-a7f7-f85c3a9b9aad');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-79fa552e-aca6-4a2e-9cd6-a2a9ec60623e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-79fa552e-aca6-4a2e-9cd6-a2a9ec60623e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-79fa552e-aca6-4a2e-9cd6-a2a9ec60623e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 32561,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          28,\n          73,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"workclass\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \" Without-pay\",\n          \" Self-emp-not-inc\",\n          \" ?\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 105549,\n        \"min\": 12285,\n        \"max\": 1484705,\n        \"num_unique_values\": 21648,\n        \"samples\": [\n          128485,\n          469907,\n          235951\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 16,\n        \"samples\": [\n          \" Bachelors\",\n          \" HS-grad\",\n          \" Some-college\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education-num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 16,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          13,\n          9,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Marital-status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \" Never-married\",\n          \" Married-civ-spouse\",\n          \" Married-AF-spouse\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Occupation\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \" Machine-op-inspct\",\n          \" ?\",\n          \" Adm-clerical\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Relationship\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \" Not-in-family\",\n          \" Husband\",\n          \" Other-relative\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Race\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \" Black\",\n          \" Other\",\n          \" Asian-Pac-Islander\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \" Female\",\n          \" Male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7385,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 119,\n        \"samples\": [\n          3781,\n          15831\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 402,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          419,\n          2051\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours-per-week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 94,\n        \"samples\": [\n          6,\n          22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"native-country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 42,\n        \"samples\": [\n          \" El-Salvador\",\n          \" Philippines\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Income\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \" >50K\",\n          \" <=50K\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["df.info()  # Shows column names and data types\n","df.describe()  # Summary of numerical data\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":682},"id":"MNdk9RTJDzHi","executionInfo":{"status":"ok","timestamp":1740721064773,"user_tz":-330,"elapsed":158,"user":{"displayName":"Sahithi Kattamuri","userId":"14146360266842818591"}},"outputId":"00970bab-a283-465a-e7f7-2ea0ed873e6b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 32561 entries, 0 to 32560\n","Data columns (total 15 columns):\n"," #   Column          Non-Null Count  Dtype \n","---  ------          --------------  ----- \n"," 0   Age             32561 non-null  int64 \n"," 1   workclass       32561 non-null  object\n"," 2   fnlwgt          32561 non-null  int64 \n"," 3   education       32561 non-null  object\n"," 4   education-num   32561 non-null  int64 \n"," 5   Marital-status  32561 non-null  object\n"," 6   Occupation      32561 non-null  object\n"," 7   Relationship    32561 non-null  object\n"," 8   Race            32561 non-null  object\n"," 9   Sex             32561 non-null  object\n"," 10  capital-gain    32561 non-null  int64 \n"," 11  capital-loss    32561 non-null  int64 \n"," 12  hours-per-week  32561 non-null  int64 \n"," 13  native-country  32561 non-null  object\n"," 14  Income          32561 non-null  object\n","dtypes: int64(6), object(9)\n","memory usage: 3.7+ MB\n"]},{"output_type":"execute_result","data":{"text/plain":["                Age        fnlwgt  education-num  capital-gain  capital-loss  \\\n","count  32561.000000  3.256100e+04   32561.000000  32561.000000  32561.000000   \n","mean      38.581647  1.897784e+05      10.080679   1077.648844     87.303830   \n","std       13.640433  1.055500e+05       2.572720   7385.292085    402.960219   \n","min       17.000000  1.228500e+04       1.000000      0.000000      0.000000   \n","25%       28.000000  1.178270e+05       9.000000      0.000000      0.000000   \n","50%       37.000000  1.783560e+05      10.000000      0.000000      0.000000   \n","75%       48.000000  2.370510e+05      12.000000      0.000000      0.000000   \n","max       90.000000  1.484705e+06      16.000000  99999.000000   4356.000000   \n","\n","       hours-per-week  \n","count    32561.000000  \n","mean        40.437456  \n","std         12.347429  \n","min          1.000000  \n","25%         40.000000  \n","50%         40.000000  \n","75%         45.000000  \n","max         99.000000  "],"text/html":["\n","  <div id=\"df-5464f529-7ccd-43d3-99d2-93a000c86055\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>fnlwgt</th>\n","      <th>education-num</th>\n","      <th>capital-gain</th>\n","      <th>capital-loss</th>\n","      <th>hours-per-week</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>32561.000000</td>\n","      <td>3.256100e+04</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","      <td>32561.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>38.581647</td>\n","      <td>1.897784e+05</td>\n","      <td>10.080679</td>\n","      <td>1077.648844</td>\n","      <td>87.303830</td>\n","      <td>40.437456</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>13.640433</td>\n","      <td>1.055500e+05</td>\n","      <td>2.572720</td>\n","      <td>7385.292085</td>\n","      <td>402.960219</td>\n","      <td>12.347429</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>17.000000</td>\n","      <td>1.228500e+04</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>28.000000</td>\n","      <td>1.178270e+05</td>\n","      <td>9.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>37.000000</td>\n","      <td>1.783560e+05</td>\n","      <td>10.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>48.000000</td>\n","      <td>2.370510e+05</td>\n","      <td>12.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>45.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>90.000000</td>\n","      <td>1.484705e+06</td>\n","      <td>16.000000</td>\n","      <td>99999.000000</td>\n","      <td>4356.000000</td>\n","      <td>99.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5464f529-7ccd-43d3-99d2-93a000c86055')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5464f529-7ccd-43d3-99d2-93a000c86055 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5464f529-7ccd-43d3-99d2-93a000c86055');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d54d2716-293f-4d1b-8da7-ae92f1a0c1e1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d54d2716-293f-4d1b-8da7-ae92f1a0c1e1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d54d2716-293f-4d1b-8da7-ae92f1a0c1e1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11498.327099385335,\n        \"min\": 13.640432553581146,\n        \"max\": 32561.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          38.58164675532078,\n          37.0,\n          32561.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 486902.252790567,\n        \"min\": 12285.0,\n        \"max\": 1484705.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          189778.36651208502,\n          178356.0,\n          32561.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education-num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11508.989513934259,\n        \"min\": 1.0,\n        \"max\": 32561.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          10.0806793403151,\n          10.0,\n          32561.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35111.6359522262,\n        \"min\": 0.0,\n        \"max\": 99999.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1077.6488437087312,\n          99999.0,\n          7385.292084839299\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital-loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11366.935322921163,\n        \"min\": 0.0,\n        \"max\": 32561.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          87.303829734959,\n          4356.0,\n          402.960218649059\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours-per-week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11498.057671750135,\n        \"min\": 1.0,\n        \"max\": 32561.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          32561.0,\n          40.437455852092995,\n          45.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","sns.histplot(df['Age'].dropna(), bins=10, kde=True)  # kde=True adds a smooth curve\n","plt.title('Age Distribution')\n","plt.xlabel('Age')\n","plt.ylabel('Frequency')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":562},"id":"-pNSCsW9D8fZ","executionInfo":{"status":"ok","timestamp":1740721086095,"user_tz":-330,"elapsed":2331,"user":{"displayName":"Sahithi Kattamuri","userId":"14146360266842818591"}},"outputId":"c83e383b-4b5e-4c9c-e8aa-c513a75b6ce5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"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PuPS06ZNm9M+tn379sedj9WxY0eAE57fVVv2798PQKdOnY7b17lzZ+/+Y/z8/IiOjq62LTw8/KxKqYhIc6JztkRE5LQsXryYjIwMZs6cycyZM4/bP2PGDIYNG3ZGj+nxeAB45JFHGD58+AmPOdtl5Tdv3ozNZvvVMjR+/HiuuuoqPv/8cxYsWMCf//xnJk6cyOLFi+nTp89pPY+/v/9Z5fylk61gWJ+LU9Tlio0iIs2BypaIiJyWGTNmEBMTw5QpU47bN3v2bD777DOmTp2Kv78/rVq1YsmSJZSUlFQb3dq1a1e1+7Vt2xYAHx8fhg4dWuuZ09LSWLZsGcnJyScd2TqmXbt2PPzwwzz88MPs3LmT3r17M2nSJN5//33g5OWnJo6N6P38MXfs2AFUrS4IVSNIAPn5+dUWrfjl6NOZZGvVqhUA27dv55JLLqm2b/v27d79IiJSOzSNUERETqm0tJTZs2dz5ZVXct111x13GzduHIWFhd7l2ocPH47L5eKtt97yPobH4zmuqMXExHDxxRfz73//m4yMjOOe9/DhwzXOnJuby80334zb7fau0nciJSUllJWVVdvWrl07goODKS8v924LDAwkPz+/xnl+Lj09nc8++8z7tdPp5L333qN3797ExcV5MwB8++233uOKi4t59913j3u8083Wv39/YmJimDp1arXXNm/ePFJTUxkxYkRNX5KIiJyARrZEROSUvvjiCwoLC/nNb35zwv3nnXee9wLHN954I1dffTXnnnsuDz/8MLt27aJz58588cUX5ObmAtVHYqZMmcKgQYPo0aMH99xzD23btiUrK4sVK1Zw8OBBNmzYcMp8O3bs4P3338cwDJxOJxs2bGDWrFkUFRUxefJkLrvssl+975AhQ7jhhhvo2rUrdrudzz77jKysLG666Sbvcf369ePNN9/kL3/5C+3btycmJua40aHT1bFjR+666y7WrFlDbGws77zzDllZWUybNs17zLBhw0hKSuKuu+7i0UcfxWaz8c477xAdHU1aWlq1xzvdbD4+Prz00kvccccdXHTRRdx8883epd9bt27NQw89VKPXIyIiJ2HyaogiItIIXHXVVYafn59RXFx80mN++9vfGj4+PkZOTo5hGIZx+PBh45ZbbjGCg4ON0NBQ47e//a3xww8/GIAxc+bMavfdvXu3cfvttxtxcXGGj4+P0aJFC+PKK680Pvnkk1NmA7w3q9VqhIWFGX369DEefPBBY8uWLccd/8ul33NycoyxY8canTt3NgIDA43Q0FBjwIABxscff1ztfpmZmcaIESOM4OBgA/AutX5sKfY1a9Yc91wnW/p9xIgRxoIFC4yePXsaDofD6Ny5szFr1qzj7p+SkmIMGDDA8PX1NZKSkozJkyef8DFPlu2XS78f89FHHxl9+vQxHA6HERERYYwePdo4ePBgtWPGjBljBAYGHpfpZEvSi4jI8SyGYRjm1DwREWluPv/8c6655hq+//57Bg4caHYcERGROqWyJSIidaK0tLTaCn1ut5thw4axdu1aMjMza331PhERkYZG52yJiEideOCBBygtLSU5OZny8nJmz57N8uXL+dvf/qaiJSIizYJGtkREpE588MEHTJo0iV27dlFWVkb79u257777GDdunNnRRERE6oXKloiIiIiISB3QdbZERERERETqgMqWiIiIiIhIHdACGafB4/GQnp5OcHBwtQtxioiIiIhI82IYBoWFhSQkJGC1/vrYlcrWaUhPT6dly5ZmxxARERERkQbiwIEDJCYm/uoxKlunITg4GKh6Q0NCQkxOIyIiIiIiZnE6nbRs2dLbEX6NytZpODZ1MCQkRGVLRERERERO6/QiLZAhIiIiIiJSB1S2RERERERE6oDKloiIiIiISB1Q2RIREREREakDKlsiIiIiIiJ1QGVLRERERESkDqhsiYiIiIiI1AGVLRERERERkTqgsiUiIiIiIlIHVLZERERERETqgMqWiIiIiIhIHVDZEhERERERqQMqWyIiIiIiInVAZUtERERERKQOqGyJiIiIiIjUAZUtERERERGROqCyJSIiIiIiUgfsZgcQkaahotJDTlE5+SUuCkpdFJa58POxEeiwE+SwExPsIDzQ1+yYIiIiIvVGZUtEzlh+SQUp+/NYfyCfnVlF7MwuZN+REtwe41fvFx/qR7eEELomhHJRxyj6tAzHarXUU2oRERGR+mUxDOPXPx0JTqeT0NBQCgoKCAkJMTuOSL0rKq9k+a4cvt15mFV7ctmZXXTC43xsFkL9fQn1txPs50N5pYeichdFZZXklbiOOz4h1I8RPeMZ2bsF3VuE1vXLEBERETlrZ9INVLZOg8qWNDeGYbA1w8myHYdZtv0wKfvzqPzFqFXb6ED6JYXTJT6E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XN4jnmv7tMBjwMMfr6ekovLUdxIRaQJMLVuGYTBu3Dg+++wzFi9eTJs2bart79evHz4+PixatMi7bfv27aSlpZGcnAxAcnIymzZtIjs723vMwoULCQkJoWvXrt5jfv4Yx4459hgiIiJSt575TTfiQ/3Yd6SEv32VanYcEZF6YWrZGjt2LO+//z4ffPABwcHBZGZmkpmZ6T2PKjQ0lLvuuosJEyawZMkSUlJSuOOOO0hOTua8884DYNiwYXTt2pXbbruNDRs2sGDBAp566inGjh2Lw+EA4N5772XPnj089thjbNu2jTfeeIOPP/6Yhx56yLTXLiIi0pyE+vvwj+t7AfD+yjSWbs8+xT1ERBo/U8vWm2++SUFBARdffDHx8fHe20cffeQ95pVXXuHKK69k1KhRXHjhhcTFxTF79mzvfpvNxty5c7HZbCQnJ3Prrbdy++238/zzz3uPadOmDV9++SULFy6kV69eTJo0if/+979a9l1ERKQeDWwfxW/Pbw3AY59sJL+kwtxAIiJ1zNTrbBnGqa8o7+fnx5QpU5gyZcpJj2nVqhVfffXVrz7OxRdfzLp16844o4iIiNSeP17eme92Hmb34WKe+nwz/7qlr9mRRETqTINYIENERESaBz8fG5Nv6I3NamHuxgy+2JBudiQRkTqjsiUiIiL1qlfLMB64pD0AT322icyCMpMTiYjUDZUtERERqXdjB7enZ2IozrJKHv1kw2mdWiAi0tiobImIiEi987FZmXxDbxx2K9/tzOH9lfvNjiQiUutUtkRERMQU7WOC+OPlnQH461ep7M0pNjmRiEjtUtkSERER04xJbs3A9pGUuTw89NF6Kt0esyOJiNQalS0RERExjdVq4e/X9SLYz876A/lMXbbb7EgiIrVGZUtERERMlRDmz/MjuwHw6jc72XyowOREIiK1Q2VLRERETHd17xZc0SOOSo/BQx+tp8zlNjuSiMhZU9kSERER01ksFv5ydQ+ighzszC7iHwu2mx1JROSsqWyJiIhIgxAR6MvL1/UA4O0f9rJi9xGTE4mInB2VLREREWkwLukcy83ntsQw4JFZGygsc5kdSUSkxlS2REREpEF5akRXkiICOJRfynNztpodR0SkxlS2REREpEEJdNiZdEMvLBb4JOUgC7Zkmh1JRKRGVLZERESkwTmndQS/v7AdAH+avYmconKTE4mInDmVLREREWmQHrq0A53jgjlSXMHjn2zEMAyzI4mInBGVLREREWmQHHYbr9zYG1+blUXbsnlvxX6zI4mInBGVLREREWmwusSH8KcrOgPw169S2ZruNDmRiMjpU9kSERGRBm3M+a0Z0jmGikoPD3z4IyUVlWZHEhE5LSpbIiIi0qBZLBb+fn0vYoId7D5czAtztRy8iDQOdrMDiIiISNOQmppap48/tm8gzy4r58PVB2hhK+T8lv51+ny1JSoqiqSkJLNjiIgJVLZERETkrDhzDwNw66231vlzhV1wG6Hn38jLSw6SPu0B3M7Ddf6cZ8s/IIBtqakqXCLNkMqWiIiInJXSoqpFK0b8/kk69exXp8/lMWBZlodcguj14NtcGFuJ1VKnT3lWstJ2M+OlR8nJyVHZEmmGVLZERESkVkQmtCKxQ7c6f57ftHTxwao0jlTAIVscye0i6/w5RURqQgtkiIiISKMS6u/DkC4xAKzel8vBvBKTE4mInJjKloiIiDQ6HWOD6RofAsD8zZkUl2s5eBFpeFS2REREpFG6uFM0EYG+FFe4mbc5E4/HMDuSiEg1KlsiIiLSKPnYrIzoEY+PzcKh/FKW7z5idiQRkWpUtkRERKTRigj05dIusQCkpOWxK7vI5EQiIj9R2RIREZFGrUNsMH2TwgBYuDWLvOIKcwOJiBylsiUiIiKN3sB2UbQI86fC7eHLTRm43B6zI4mIqGyJiIhI42e1Wri8exwBvjaOFFfwTWoWhqEFM0TEXCpbIiIi0iQEOuxc0T0eiwV2ZBWx8WCB2ZFEpJlT2RIREZEmo0W4P4PaRwHw7c7DZBSUmpxIRJozlS0RERFpUvq0DKNDTBAeA77clEGRLngsIiZR2RIREZEmxWKxMLRLbNUFj8vdzN2YTqUWzBARE6hsiYiISJPja7dyVc94/OxWspzlfLMtWwtmiEi9U9kSERGRJikswJcrelQtmLE9s5C1+/PMjiQizYzKloiIiDRZLSMCuKhjNADLdx9h9+EikxOJSHOisiUiIiJNWq/EMHq0CAVg/uZMspxlJicSkeZCZUtERESavIs7RtMqIoBKj8EXG9JxlrrMjiQizYDKloiIiDR5VquFy3vEERnkS0mFmy82pFNe6TY7log0cSpbIiIi0iw47DZG9kog0GHjSHEFX27KwO3RCoUiUndUtkRERKTZCPbz4Te9EvCxWTiQW8rCrVlaEl5E6ozKloiIiDQrMcF+jOgRj9UC27MK+XZnjgqXiNQJlS0RERFpdlpFBnJp11gA1h/IJyVN1+ASkdqnsiUiIiLNUue4EC7oEAXAD7uOsCW9wOREItLUqGyJiIhIs9U3KZy+SWEAfJOazfbMQnMDiUiTorIlIiIizdqg9lF0bxECwIKtmezKLjI5kYg0FSpbIiIi0qxZLBYu6RRDl/hgDAPmbc5gb06x2bFEpAlQ2RIREZFmz2KxMLRLLB1jgvAY8OWmDNJyS8yOJSKNnMqWiIiICGC1WBjWLY520YG4PQZzNqRzKK/U7Fgi0oipbImIiIgcZbNauKx7HK0iA6j0GPxvwyEyC8rMjiUijZTKloiIiMjP2K1WruwRT2K4Py63wefrD5HtVOESkTOnsiUiIiLyC3abld/0SiA+1I/ySg+z12mES0TOnMqWiIiIyAn42KyM7P1T4fps3SEO5escLhE5fSpbIiIiIifhsNu4uncLEsP9qXB7+HzdIQ5olUIROU0qWyIiIiK/wtduZWSvhJ8tmpHOviO6DpeInJqpZevbb7/lqquuIiEhAYvFwueff15tv2EYPP3008THx+Pv78/QoUPZuXNntWNyc3MZPXo0ISEhhIWFcdddd1FUVP3K7xs3buSCCy7Az8+Pli1b8vLLL9f1SxMREZEmxG6zcmXPeNpG/bQs/O7DRae+o4g0a6aWreLiYnr16sWUKVNOuP/ll1/m9ddfZ+rUqaxatYrAwECGDx9OWdlPJ6iOHj2aLVu2sHDhQubOncu3337L7373O+9+p9PJsGHDaNWqFSkpKfz973/n2Wef5T//+U+dvz4RERFpOuxWK1f0iKfD0Qsff7Upgx1ZhWbHEpEGzG7mk19++eVcfvnlJ9xnGAavvvoqTz31FCNHjgTgvffeIzY2ls8//5ybbrqJ1NRU5s+fz5o1a+jfvz8A//znP7niiiv4xz/+QUJCAjNmzKCiooJ33nkHX19funXrxvr165k8eXK1UiYiIiJyKjarhcu6xWGzZrEts5D5mzOp9Bh0jQ8xO5qINEAN9pytvXv3kpmZydChQ73bQkNDGTBgACtWrABgxYoVhIWFeYsWwNChQ7Faraxatcp7zIUXXoivr6/3mOHDh7N9+3by8vJO+Nzl5eU4nc5qNxEREREAq9XCsK6xdEsIwQAWbs3ix7QTf6YQkeatwZatzMxMAGJjY6ttj42N9e7LzMwkJiam2n673U5ERES1Y070GD9/jl+aOHEioaGh3lvLli3P/gWJiIhIk2GxWBjSOYY+SWEAfLczh+W7czAMw9xgItKgNNiyZaYnnniCgoIC7+3AgQNmRxIREZEGxmKxcEH7KM5vFwnAmn15LN6ejUeFS0SOarBlKy4uDoCsrKxq27Oysrz74uLiyM7Orra/srKS3Nzcasec6DF+/hy/5HA4CAkJqXYTERER+SWLxcI5rSO4pHPVTJvNh5zM25xJpcdjcjIRaQgabNlq06YNcXFxLFq0yLvN6XSyatUqkpOTAUhOTiY/P5+UlBTvMYsXL8bj8TBgwADvMd9++y0ul8t7zMKFC+nUqRPh4eH19GpERESkKevRIpQrusdhs1jYlV3EFxvSqahU4RJp7kwtW0VFRaxfv57169cDVYtirF+/nrS0NCwWC+PHj+cvf/kLX3zxBZs2beL2228nISGBq6++GoAuXbpw2WWXcc8997B69Wp++OEHxo0bx0033URCQgIAt9xyC76+vtx1111s2bKFjz76iNdee40JEyaY9KpFRESkKeoQG8xveifgY7NwILeU2esOUu42O5WImMnUpd/Xrl3L4MGDvV8fK0Bjxoxh+vTpPPbYYxQXF/O73/2O/Px8Bg0axPz58/Hz8/PeZ8aMGYwbN44hQ4ZgtVoZNWoUr7/+und/aGgoX3/9NWPHjqVfv35ERUXx9NNPa9l3ERERqXVJEQFc2yeR/60/RJaznKUlPthCYk59RxFpkkwtWxdffPGvrtpjsVh4/vnnef755096TEREBB988MGvPk/Pnj357rvvapxTRERE5HTFhfpxff+WfLbuEEXllcTd9g9257noa3YwEal3DfacLREREZHGKiLQlxv7tyTUx4M9KII/LznCsh2HzY4lIvVMZUtERESkDgT52bkotpLSfespqzS4c/oaZq3V5WREmhOVLREREZE64mOF7FnPcmGSH26PwaOfbOT1RTt18WORZkJlS0RERKQueSp5cEAY913cDoDJC3fwp882UenW0vAiTZ3KloiIiEgds1gsPH5ZZ14Y2Q2rBT5cfYC731tLYZnr1HcWkUZLZUtERESkntyW3Jqpt/bDz8fK0u2HufaN5aQdKTE7lojUEZUtERERkXo0rFscH/8+mdgQBzuzixg55XtW7TlidiwRqQMqWyIiIiL1rGdiGP8bO4ieiaHklbi49e1VfLQmzexYIlLLVLZERERETBAX6sdHv0tmRM94XG6Dxz/dxF/mbsXt0UqFIk2FypaIiIiISfx9bfzr5j6MH9oBgP9+v5e7312jhTNEmgiVLRERERETWSwWxg/tyL9u6YPDbmXJ9sNc88Zydh8uMjuaiJwllS0RERGRBuDKngnehTN2ZRcx8l8/MH9zhtmxROQsqGyJiIiINBC9WoYx54FBnNsmgqLySu59/0cmfpWqCyCLNFIqWyIiIiINSEywHzPuHsA9F7QB4N/f7uHmt1aSnl9qcjIROVMqWyIiIiINjI/NypMjuvLG6L4EOeys2ZfH5a99x9dbMs2OJiJnQGVLREREpIG6okc8X/6h6npcBaUufvd/KTzzv82UudxmRxOR06CyJSIiItKAtYoM5JN7z+fuQVXTCt9dsZ8Rr3/HhgP55gYTkVNS2RIRERFp4HztVp66sivT7jiHmGAHuw8Xc+2by5m8cAcuLZ4h0mCpbImIiIg0EoM7xbBg/IVc2TMet8fg9UU7ueqf37Neo1wiDZLKloiIiEgjEh7oy79u6cvrN/chPMCHbZmFXPPGDzw3ZwtF5ZVmxxORn1HZEhEREWmEftMrgW8mXMTVvRMwDJj2wz4unbyMuRvTMQzD7HgigsqWiIiISKMVGeTg1Zv68O6d55IY7k9GQRnjPljHTf9ZSWqG0+x4Is2eypaIiIhII3dRx2gWPnQR44d2wGG3smpvLiNe/44nZm8iy1lmdjyRZktlS0RERKQJ8Pe1MX5oRxY9fBFX9IjDY8CHq9O46O9L+PuCbTjLXGZHFGl2VLZEREREmpDE8ADeGN2PWfcm069VOGUuD1OW7OaCl5bwz0U7KVTpEqk3KlsiIiIiTdA5rSP45N5k/nNbP9rHBFFQ6mLSwh0MfHExr32zk4JSlS6RuqayJSIiItJEWSwWhnWLY8H4C3ntpt60iw7EWVbJK9/sIHniIp79YgtpR0rMjinSZNnNDiAiIiLS1KWmppodgZbAixcFs+KgD5+kFpFWUMn05ft4b8U+zk3w46pOgXSO9MFisdRLnqioKJKSkurluUTMorIlIiIiUkecuYcBuPXWW01Ocjy/1r0JOedq/Nv2Z+WhMlYeKqM8fTvONZ9Tsv0HMDx1+vz+AQFsS01V4ZImTWVLREREpI6UFlVd62rE75+kU89+Jqc5MWeFi52FVtKKrTgSOhE98nH8bAatAz20DnITWAefFrPSdjPjpUfJyclR2ZImTWVLREREpI5FJrQisUM3s2OcVFegpKKSjQcL2HiwgFKXm21OG9ucNlpHBtC9RShtIgOxWutniqFIU6GyJSIiIiIE+No5r20k/VuHs+dwMZsOFXAwr5R9R0rYd6SEIIedrgkhdIsPIcTfx+y4Io2CypaIiIiIeNmtVjrGBtMxNpi8kgq2HHKyNcNJUXklq/fmsnpvLonh/nSJD6F9dBC+di1uLXIyKlsiIiIickLhAb4M6hDFee0i2HO4mM2HCjiQV8rBo7eltmzaxwTRJS6ExHD/elvJUKSxUNkSERERkV/189EuZ5mLbRmFbM1wUlDqIjWjkNSMQoL97HSJC6FLfDBhAb5mRxZpEFS2REREROS0hfj5cG6bCM5pHU5GQRmpGU52ZBVRWFbJ6n25rN6XS3yoH13jQ+gQE4TDx2Z2ZBHTqGyJiIiIyBmzWCwkhPmTEObPRR2j2X24mNRMJ2lHSsgoKCOjoIylOw7TJjKQTnHBtI4KwG7V+V3SvKhsiYiIiMhZsdusdIoLplNcMEXllWzLdLIto5AjxRXsOlzErsNFOOxWOsQE0TkuBMMwO7FI/VDZEhEREZFaE+Sw079VBP2SwskpqmBbppPtWYUUl7vZnO5kc7qTAJsPYReOIa3ARV+zA4vUIZUtEREREal1FouF6GAH0cHRDGwfxaG8UrZlFrIru4gSt4fQ5OsZvyCHf2/8jmv6JPCbXi2IC/UzO7ZIrVLZEhEREZE6ZbVYaBkRQMuIAAZ3imbt5m0sWb6WkM7JpGY4Sc1wMnHeNpLbRnJ17xZc1iOOED9dOFkaP5UtEREREak3dpuVxACDw5/9lVnL13DQGs3n6w6xZl8ey3cfYfnuIzz1v80M7RLD1b1bcHGnGF04WRotlS0RERERMUWww8rovq0YPaAVB3JL+GJDOp+tO8Su7CK+2pTJV5syCfX34dKusYzoEc/A9lEqXtKoqGyJiIiIiOlaRgQwdnB77r+4HVvSnfxv/SH+tz6d7MJyPkk5yCcpBwnxs3Np1zhG9IxjYPsoHHZdw0saNpUtEREREWkwLBYL3VuE0r1FKH+8vAtr9uXy1aYM5m3O5HBhOZ/+eJBPfzxIsJ+doV1iuaRzDBd2iCY0QOd4ScOjsiUiIiIiDZLNauG8tpGc1zaSZ67qxtqfFa/swnI+W3eIz9Ydwma10C8pnIs7RzO4Uwyd44KxWCxmxxdR2RIRERGRhs9mtTCgbSQDjhWv/Xl8k5rFkm3Z7MwuYvW+XFbvy+Xl+duJC/Hjoo7RDGgbwTmtI0gM91f5ElOobImIiIhIo2K1Wji3TQTntongT1d04UBuCUt3HGbptmx+2J1DprOMj9Ye4KO1BwCIC/Gjf+twzmldVb46xQVjs6p8Sd1T2RIRERGRRq1lRAC3ndeK285rRZnLzaq9uXy/8zBr9uWx+VABmc4y5m7MYO7GDACCHXa6JITQLSGEbgmhdEsIoX1MED42rXQotUtlS0RERERMkZqaWiePGwxcHg+Xx/tTXunHztwKth6uYFtOBduOuCgsr2T13lxW78313sfHCkmhPrQJs9Mq1Ieko3+GOOq/gEVFRZGUlFTvzyu1T2VLREREROqVM/cwALfeemv9P7nFik9UEr6xbfGNbYdvTFt8Y9vicgSyO8/F7jwXUOo9vLIoF9fhfbgO76fi8L6q/z5yAKOyos4i+gcEsC01VYWrCVDZEhEREZF6VVrkBGDE75+kU89+JqcBw4DiygryXRYKKqwUuCwUVFgocVuwB0VgD4rAv03fn9+DIDuE+hiE+Hqq/vSp2na263Bkpe1mxkuPkpOTo7LVBKhsiYiIiIgpIhNakdihm9kxTqqi0sOR4nKOFFWQU3T0z+JyylweiiqhqNLCodKfphnarRYiAn2JDPIlKshBZGDVnwG+Nq2G2EypbImIiIiInICv3Up8qD/xof7ebYZhUFLhripfxT+VsCPFFVR6DLILy8kuLAcKvffx97F5C1jUz4qYXQtyNHkqWyIiIiIip8lisRDosBPosNMqMtC73WMYFJS6fipfR0fBCkpclLrcHMwr5WDeT+eCWYCwAJ+jBeynEmYYJrwoqTMqWyIiIiIiZ8lqsRAe4Et4gC8dYn7aXun2VBsByykqJ6eoglKXm7wSF3klLnZmF3mPt1t8iB39Mv9OKWBQxX46xgTRNjqIqCDfJjsV0e0xyC4s41BeKYcLy8kvdZFXUkFBqQtXpYHHMKj0eHB74P6L29EyIsDsyKdNZUtEREREpI7YbVZiQ/yIDfHzbvv5VMScn50PlltcQaUBfoldWbC7hAW7N3vvE+BjoUWwnYRgOy2CbSQE24kPthMbaCPAp+FPR/QYBrmlHg4VVnLIWcmhwkrSCyvJKHKTU+LGc5ojetf3T1TZEhERERGREzvZVES3xyBl5Q988dG7+Ea3wSemNT6RLbGHxlDisrIz18XOXNdxj+cudVKZn0VlwdFbfiaVzsO4i47gLsrDU1IA1Mf8RAu2oAjs4fH4hMdjD0vAHh6HT3gC9vAWWH39TnpPw12JuzCHyqJcPKWFeMqceMqKMSpdGIYbPB7sNiue2zsD4fXwWmpHsypbU6ZM4e9//zuZmZn06tWLf/7zn5x77rlmxxIRERERwWa1YCvNpST1WwZfeAGdevYCwG1UUuSyUFQJhS4LhZUWCl0WiistVHgs2PxDsPmH4IjvcMLHtWDgZwM/W9WfDquBjxV8rAZ2C97/9rGC3VJ1Ppnl6J8G4DGqbm6g0gMuj4UKD5R7LJS7odRtodQNxZUWPMbJpzpaMAi0Q7CPQbDdIOjon4H2qlwWSwQQccL7HlsS31r20Fm9x/Wt2ZStjz76iAkTJjB16lQGDBjAq6++yvDhw9m+fTsxMTGnfgARERERkXpyusviV1R6KCh14Sxz4Sx14SytpKDMRVFZJcUVlZRUuDGoKkOl7ro/58tigRA/H8L8fQj19yE0oOq/wwN8CfH3wWZtmuednUyzKVuTJ0/mnnvu4Y477gBg6tSpfPnll7zzzjv88Y9/NDmdiIiIiMiZ87VbiQ52EB3sOOF+t8egtMJNcUUlxeWVFJe7KXW5Ka90U1HpoaLSQ7nb4/1vl9uDx6g6r8xjgNUCVqsFm8WCzWrB127FYbfia7cS4GMnwGEj0NdOoMNGqL8PwX7Nr1D9mmZRtioqKkhJSeGJJ57wbrNarQwdOpQVK1Ycd3x5eTnl5eXerwsKCgBwOp11H/Y0FBVVrVhzcOcWyktLTE7TcGSl7QYgc98Odgc2nhMn64PemxPT+3Jiel9OTu/Niel9OTm9Nyem9+Xk6vq9CTh6q8YK+B69nS4PUH70BlQCR47e6sLhg3uBqs/BZn8mP/b8xmms028xTueoRi49PZ0WLVqwfPlykpOTvdsfe+wxli1bxqpVq6od/+yzz/Lcc8/Vd0wREREREWkkDhw4QGJi4q8e0yxGts7UE088wYQJE7xfezwecnNziYyMbLLXNzgVp9NJy5YtOXDgACEhIWbHaXb0/ptP3wNz6f03n74H5tL7bz59D8zVkN5/wzAoLCwkISHhlMc2i7IVFRWFzWYjKyur2vasrCzi4uKOO97hcOBwVJ/3GhYWVpcRG42QkBDT/4I3Z3r/zafvgbn0/ptP3wNz6f03n74H5moo739oaOhpHdfwr4BWC3x9fenXrx+LFi3ybvN4PCxatKjatEIREREREZHa0ixGtgAmTJjAmDFj6N+/P+eeey6vvvoqxcXF3tUJRUREREREalOzKVs33ngjhw8f5umnnyYzM5PevXszf/58YmNjzY7WKDgcDp555pnjpldK/dD7bz59D8yl9998+h6YS++/+fQ9MFdjff+bxWqEIiIiIiIi9a1ZnLMlIiIiIiJS31S2RERERERE6oDKloiIiIiISB1Q2RIREREREakDKlviNXHiRM455xyCg4OJiYnh6quvZvv27dWOKSsrY+zYsURGRhIUFMSoUaOOu1i01Mybb75Jz549vRfrS05OZt68ed79eu/r34svvojFYmH8+PHebfo+1J1nn30Wi8VS7da5c2fvfr339ePQoUPceuutREZG4u/vT48ePVi7dq13v2EYPP3008THx+Pv78/QoUPZuXOniYmbltatWx/3c2CxWBg7diygn4O65na7+fOf/0ybNm3w9/enXbt2vPDCC/x8PTn9DNStwsJCxo8fT6tWrfD39+f8889nzZo13v2N7f1X2RKvZcuWMXbsWFauXMnChQtxuVwMGzaM4uJi7zEPPfQQc+bMYdasWSxbtoz09HSuvfZaE1M3HYmJibz44oukpKSwdu1aLrnkEkaOHMmWLVsAvff1bc2aNfz73/+mZ8+e1bbr+1C3unXrRkZGhvf2/fffe/fpva97eXl5DBw4EB8fH+bNm8fWrVuZNGkS4eHh3mNefvllXn/9daZOncqqVasIDAxk+PDhlJWVmZi86VizZk21n4GFCxcCcP311wP6OahrL730Em+++Sb/+te/SE1N5aWXXuLll1/mn//8p/cY/QzUrbvvvpuFCxfyf//3f2zatIlhw4YxdOhQDh06BDTC998QOYns7GwDMJYtW2YYhmHk5+cbPj4+xqxZs7zHpKamGoCxYsUKs2I2aeHh4cZ///tfvff1rLCw0OjQoYOxcOFC46KLLjIefPBBwzD0M1DXnnnmGaNXr14n3Kf3vn48/vjjxqBBg0663+PxGHFxccbf//5377b8/HzD4XAYH374YX1EbHYefPBBo127dobH49HPQT0YMWKEceedd1bbdu211xqjR482DEM/A3WtpKTEsNlsxty5c6tt79u3r/Hkk082yvdfI1tyUgUFBQBEREQAkJKSgsvlYujQod5jOnfuTFJSEitWrDAlY1PldruZOXMmxcXFJCcn672vZ2PHjmXEiBHV3m/Qz0B92LlzJwkJCbRt25bRo0eTlpYG6L2vL1988QX9+/fn+uuvJyYmhj59+vDWW2959+/du5fMzMxq34fQ0FAGDBig70MdqKio4P333+fOO+/EYrHo56AenH/++SxatIgdO3YAsGHDBr7//nsuv/xyQD8Dda2yshK3242fn1+17f7+/nz//feN8v23mx1AGiaPx8P48eMZOHAg3bt3ByAzMxNfX1/CwsKqHRsbG0tmZqYJKZueTZs2kZycTFlZGUFBQXz22Wd07dqV9evX672vJzNnzuTHH3+sNj/8GP0M1K0BAwYwffp0OnXqREZGBs899xwXXHABmzdv1ntfT/bs2cObb77JhAkT+NOf/sSaNWv4wx/+gK+vL2PGjPG+17GxsdXup+9D3fj888/Jz8/nt7/9LaD/B9WHP/7xjzidTjp37ozNZsPtdvPXv/6V0aNHA+hnoI4FBweTnJzMCy+8QJcuXYiNjeXDDz9kxYoVtG/fvlG+/ypbckJjx45l8+bN1c6XkLrXqVMn1q9fT0FBAZ988gljxoxh2bJlZsdqNg4cOMCDDz7IwoULj/utmtS9Y785BujZsycDBgygVatWfPzxx/j7+5uYrPnweDz079+fv/3tbwD06dOHzZs3M3XqVMaMGWNyuubn7bff5vLLLychIcHsKM3Gxx9/zIwZM/jggw/o1q0b69evZ/z48SQkJOhnoJ783//9H3feeSctWrTAZrPRt29fbr75ZlJSUsyOViOaRijHGTduHHPnzmXJkiUkJiZ6t8fFxVFRUUF+fn6147OysoiLi6vnlE2Tr68v7du3p1+/fkycOJFevXrx2muv6b2vJykpKWRnZ9O3b1/sdjt2u51ly5bx+uuvY7fbiY2N1fehHoWFhdGxY0d27dqln4F6Eh8fT9euXatt69Kli3c657H3+per3+n7UPv279/PN998w9133+3d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\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.figure(figsize=(8, 5))\n","sns.countplot(x='Sex', data=df) # Added data=df\n","plt.title('Sex Distribution')\n","plt.xlabel('Sex')\n","plt.ylabel('Count')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"0F4m0rScEBAo","executionInfo":{"status":"ok","timestamp":1740721289262,"user_tz":-330,"elapsed":210,"user":{"displayName":"Sahithi Kattamuri","userId":"14146360266842818591"}},"outputId":"3345d5bf-5734-4f6f-de84-c63f64fcbe0e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"h_-FgvV9FbTk"},"execution_count":null,"outputs":[]}]}